{"version":3,"sources":["components/SecondHeader.js","components/MainHeder.js","action/user.js","components/ExitOrEntry.js","components/MainFooter.js","scss/img/сarousel/forest1.jpg","scss/img/сarousel/forest2.jpg","scss/img/сarousel/forest3.jpg","scss/img/сarousel/forest4.jpg","components/CarouselBox.js","components/SharedMap.js","action/creatingRoutes.js","components/MyMap.js","components/BlogList.js","utils/helpFuncion.js","action/route.js","components/PolylineAndMarker.js","components/DetailsMap.js","components/ProfilePolylineAndMarker.js","components/ListComments.js","pages/AuthorizationPage.js","pages/RegistrationPage.js","action/blog.js","pages/BlogPage.js","action/allRoutes.js","pages/RoutesPage.js","pages/ProfilePage.js","pages/MainPage.js","pages/NotFoundPage.js","pages/RouteDetailsPage.js","pages/CreatingRoute.js","pages/ReportPage.js","App.js","reducers/user.js","reducers/blog.js","reducers/creatingRoutes.js","reducers/allRoutes.js","reducers/routes.js","reducers/index.js","sagas/sageUser.js","sagas/sageBlog.js","sagas/sageRoutes.js","sagas/index.js","store.js","index.js"],"names":["SecondHeader","className","to","activeStyle","color","MainHeder","userName","useSelector","state","user","alt","exact","padding","backgroundColor","borderRadius","textDecoration","SET_USER","LOGOUT","REGISTRATION","LOGIN","AUTH","SAVE_USER_DATA","GET_USER_ROUTES","DELETE_MY_ROUTE","PUBLISH_MY_ROUTE","COMPLETE_ROUTE","setUser","type","payload","logout","SaveUserData","data","ExitOrEntry","dispatch","useDispatch","onClick","MainFooter","href","style","CarouselBox","Carousel","Item","src","forest1","Caption","forest2","forest3","forest4","withScriptjs","withGoogleMap","routes","defaultZoom","defaultCenter","lat","lng","map","cord","сoordinates","coordinates","date","id","SET_COORDINAT","REMOVE_COORDINAT","CREATE_ROUTE","removeCoordinat","isCreation","isVisibility","coords","creatingRoutes","userRoutes","ev","coordinat","latLng","path","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","BlogList","blog","posts","Row","heading","text","publishingDate","Col","md","Card","width","border","determiningComplexity","complexity","difficultyTranslation","GET_ROUTES","SAVE_ROUTES","ADD_ROUTE","PolylineAndMarker","React","useState","selectedRoute","setSelectedRoute","isAdmin","history","useHistory","position","icon","url","scaledSize","window","google","maps","Size","onCloseClick","name","description","push","pathname","userHas","console","log","ProfilePolylineAndMarker","isPublished","isPassed","customData","ListComments","Avatar","AuthorizationPage","validationsSchema","yup","shape","email","required","password","initialValues","validateOnBlur","validationSchema","onSubmit","values","login","errors","touched","handleChange","handlBlur","handleSubmit","onChange","onBlur","value","size","placeholder","RegistrationPage","matches","confirmPassword","oneOf","registration","GET_BLOG","SAVE_BLOG","getBlog","page","BlogPage","pageModel","useEffect","theme","createMuiTheme","palette","primary","green","Grid","container","spacing","item","xs","justify","hasPreviousPage","ThemeProvider","Button","pageNumber","variant","height","lineHeight","totalPages","hasNextPage","GET_ALL_ROUTES","SAVE_ALL_ROUTES","receiveAllRoute","router","RoutesPage","allRoutes","SharedMap","googleMapURL","loadingElement","containerElement","mapElement","ProfilePage","creation","setCreation","visibility","setVisibility","fontSize","routesCount","passedRoutesCount","length","MainPage","NotFound","RouteDetailsPage","prop","location","split","setValue","getRoute","sm","duration","rating","region","Math","round","Rating","precision","event","newValue","CreatingRoute","routeName","keyPoints","createdById","resize","disabled","selected","marginLeft","ReportPage","App","localStorage","getItem","component","NotFoundPage","defaultState","routeReviewModels","combineReducers","action","removeItem","workerCompleteRoute","workerPublishMyRoute","workerCreateRoutes","workerDeleteMyRoute","workerRegistration","workerUserData","workerLogin","workerAuth","watchUser","requestCompleteRoute","axios","put","RouteId","headers","Authorization","call","requestUserData","response","requestAuth","swal","timer","toString","title","requestPublishMyRoute","requestCreateRoutes","post","requestDeleteMyRoute","delete","requestRegistration","get","requestLogin","setItem","token","takeEvery","workerBlog","watchBlog","requestBlog","workerAddRoute","workerAllRoute","workerRoute","watchRoute","requestAddRoute","requestAllRoute","requestRoute","rootWatcher","all","sagaMiddleware","createSagaMiddleware","logger","createLogger","diff","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6b21ff1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nfunction SecondHeader() {\r\n    return(\r\n        <header className = \"header-second\">\r\n            <div className = \"header-second__body\">\r\n                    <Link className = \"header-second__logo\" to = '/'></Link>\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink className = \"header-second__elemen\" \r\n                                activeStyle = {{color: \"forestgreen\"}} to = '/Authorization'\r\n                            >\r\n                            Вход\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                        <NavLink className = \"header-second__elemen\"\r\n                            activeStyle = {{color: \"forestgreen\"}} to = '/Registration'\r\n                        >\r\n                        Регистрация\r\n                        </NavLink>\r\n                        </li>\r\n                    </ul>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default SecondHeader;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport {ExitOrEntry} from './index';\r\n\r\nfunction MainHeder() {\r\n    const userName = useSelector(state => state.user.userName);\r\n    \r\n    return(\r\n        <header className = \"header\">\r\n            <div className = \"header__body\">\r\n                <a className = \"logo\" alt = \"Логотип\"/>\r\n                <ul className = \"menu\">\r\n                    <li>\r\n                        <NavLink exact \r\n                            activeStyle = {{color: \"white\", padding: \"5px\", backgroundColor: \"rgb(28, 148, 64)\", borderRadius: \"10px\", textDecoration: \"none\"}}\r\n                            className = \"menu__elemen\" to = '/'\r\n                        >\r\n                        Главная\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink \r\n                            activeStyle = {{color: \"white\", padding: \"5px\", backgroundColor: \"rgb(28, 148, 64)\", borderRadius: \"10px\", textDecoration: \"none\"}} \r\n                            className = \"menu__elemen\" to = '/Routes'\r\n                        >\r\n                        Маршруты\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink \r\n                            activeStyle = {{color: \"white\", padding: \"5px\", backgroundColor: \"rgb(28, 148, 64)\", borderRadius: \"10px\", textDecoration: \"none\"}} \r\n                            className = \"menu__elemen\" to = '/Blog'\r\n                        >\r\n                        Блог\r\n                        </NavLink>\r\n                    </li>\r\n                    {\r\n                        userName &&\r\n                        <li>\r\n                            <NavLink \r\n                                activeStyle = {{color: \"white\", padding: \"5px\", backgroundColor: \"rgb(28, 148, 64)\", borderRadius: \"10px\", textDecoration: \"none\"}} \r\n                                className = \"menu__elemen\" to = '/Profile'\r\n                            >\r\n                            Профиль\r\n                            </NavLink>\r\n                        </li>\r\n                    }\r\n\r\n                </ul>\r\n                <ExitOrEntry userName = {userName}/>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default MainHeder;","export const SET_USER = 'SET_USER';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTRATION = 'REGISTRATION';\r\nexport const LOGIN = 'LOGIN';\r\nexport const AUTH = 'AUTH';\r\nexport const SAVE_USER_DATA = 'SAVE_USER_DATA';\r\nexport const GET_USER_ROUTES = 'GET_USER_ROUTES';\r\nexport const DELETE_MY_ROUTE = 'DELETE_MY_ROUTE';\r\nexport const PUBLISH_MY_ROUTE = 'PUBLISH_MY_ROUTE';\r\nexport const COMPLETE_ROUTE = 'COMPLETE_ROUTE';\r\n\r\nexport const setUser = (userName) => ({type: SET_USER, payload: userName});\r\nexport const logout = () => ({type: LOGOUT});\r\nexport const registration = (values) => ({type: REGISTRATION, payload: values});\r\nexport const login = (values) => ({type: LOGIN, payload: values});\r\nexport const auth = () => ({type: AUTH});\r\nexport const GetUserRoute = () => ({type: GET_USER_ROUTES});\r\nexport const SaveUserData = (data) => ({type: SAVE_USER_DATA, payload: data});\r\nexport const deleteMyRoute = (id) => ({type: DELETE_MY_ROUTE, payload: id});\r\nexport const publishMyRoute = (id) => ({type: PUBLISH_MY_ROUTE, payload: id});\r\nexport const completeRoute = (id) => ({type: COMPLETE_ROUTE, payload: id });","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport { logout } from '../action/user';\r\n\r\nfunction ExitOrEntry({userName}) {\r\n    const dispatch = useDispatch();\r\n\r\n    if(userName){\r\n        return(\r\n            <div className = \"exit-entry\">\r\n               <b className = \"exit-entry__name\">{userName}</b>\r\n               <Link to = \"/Authorization\" className = \"exit-entry__btn\" onClick = {() => dispatch(logout())}>Выход</Link>\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n        <div className = \"exit-entry\">\r\n            <Link to = \"/Authorization\" className = \"exit-entry__btn\">Вход</Link>\r\n            <Link to = \"/Registration\" className = \"exit-entry__btn\">Регистрация</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExitOrEntry;","import React from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction MainFooter() {\r\n    const userName = useSelector(state => state.user.userName);\r\n\r\n    return(\r\n        <footer className = 'footer'>\r\n            <div className = \"сontacts\">\r\n                <p className = \"сontacts__text\">\r\n                    E-mail для предложений и запросов: <a href=\"/\" style={{color: \"white\"}}>snippymr@yandex.ru</a>\r\n                </p>\r\n                <hr/>\r\n                <p className = \"сontacts__text\">\r\n                    Дискорд для связи с администрацией: Natus mori#7928\r\n                </p>\r\n            </div>\r\n            <div className = \"footer-nav\">\r\n                <ul>\r\n                    <li><Link className = \"footer-nav__element\" to = '/'>Главная</Link></li>\r\n                    <li><Link className = \"footer-nav__element\" to = '/Routes'>Маршруты</Link></li>\r\n                    <li><Link  className = \"footer-nav__element\" to = '/Blog'>Блог</Link></li>\r\n                    {\r\n                        userName &&\r\n                        <li><Link className = \"footer-nav__element\" to = '/Profile'>Профиль</Link></li>\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default MainFooter;","export default __webpack_public_path__ + \"static/media/forest1.61b96626.jpg\";","export default __webpack_public_path__ + \"static/media/forest2.8f736bac.jpg\";","export default __webpack_public_path__ + \"static/media/forest3.43ff946a.jpg\";","export default __webpack_public_path__ + \"static/media/forest4.6c7df074.jpg\";","import React from 'react';\r\nimport {Carousel} from 'react-bootstrap';\r\n\r\nimport forest1 from \"../scss/img/сarousel/forest1.jpg\";\r\nimport forest2 from \"../scss/img/сarousel/forest2.jpg\";\r\nimport forest3 from \"../scss/img/сarousel/forest3.jpg\";\r\nimport forest4 from \"../scss/img/сarousel/forest4.jpg\";\r\n\r\nfunction CarouselBox() {\r\n    return(\r\n        <div className = \"carousel\">\r\n            <div className = \"carousel__body\">\r\n                <Carousel>\r\n                    <Carousel.Item>\r\n                        <img src = {forest1} alt = \"Forest\" className = \"d-block w-100\"/>\r\n                        <Carousel.Caption>\r\n                            <h3 className = \"carousel__title\">Регистрируйся</h3>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img src = {forest2} alt = \"Forest\" className = \"d-block w-100\"/>\r\n                        <Carousel.Caption>\r\n                            <h3 className = \"carousel__title\">Выбирай маршруты для путешествий</h3>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img src = {forest3} alt = \"Forest\" className = \"d-block w-100\"/>\r\n                        <Carousel.Caption>\r\n                            <h3 className = \"carousel__title\">Создавай свои собственные маршруты</h3>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img src = {forest4} alt = \"Forest\" className = \"d-block w-100\"/>\r\n                        <Carousel.Caption>\r\n                            <h3 className = \"carousel__title\">Делись своими маршрутами с другими пользователями</h3>\r\n                        </Carousel.Caption> \r\n                    </Carousel.Item>\r\n                </Carousel>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CarouselBox;","import React from 'react';\r\nimport {\r\n    withScriptjs, withGoogleMap,\r\n    GoogleMap\r\n} from \"react-google-maps\";\r\n\r\n\r\nimport {PolylineOrMarker} from './index'\r\n\r\nfunction wrappedMap({routes}) {\r\n    return (\r\n        <GoogleMap\r\n            defaultZoom={3.5}\r\n            defaultCenter={{lat: 63, lng: 90,}}\r\n        >\r\n          {\r\n            routes &&\r\n            routes.map(\r\n              cord => <PolylineOrMarker сoordinates={cord.coordinates} date={cord} key={cord.id}/>\r\n            )\r\n          }\r\n        </GoogleMap>\r\n    )  \r\n}\r\n\r\n\r\nexport default withScriptjs(withGoogleMap(wrappedMap));\r\n\r\n","export const SET_COORDINAT = 'SET_COORDINAT';\r\nexport const REMOVE_COORDINAT = 'REMOVE_COORDINAT';\r\nexport const CREATE_ROUTE = 'CREATE_ROUTE';\r\nexport const CLEAR_ROUTE = 'CLEAR_ROUTE';\r\n\r\nexport const setCoordinat = (coordinat) => ({type: SET_COORDINAT, payload: coordinat});\r\nexport const removeCoordinat = () => ({type: REMOVE_COORDINAT});\r\nexport const createRoute = (date) => ({type: CREATE_ROUTE, payload: date});\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    withScriptjs, withGoogleMap,\r\n    GoogleMap, Polyline\r\n} from \"react-google-maps\";\r\n\r\nimport {setCoordinat} from '../action/creatingRoutes';\r\nimport {ProfilePolylineAndMarker} from './index'\r\n\r\n\r\nfunction MyMap({isCreation, isVisibility}) {\r\n  const coords  = useSelector(state => state.creatingRoutes.coordinates);\r\n  const routes = useSelector(state => state.user.userRoutes);\r\n  const dispatch = useDispatch();\r\n\r\n  function creation(ev) {\r\n    if(isCreation){\r\n      dispatch(setCoordinat({lat: ev.latLng.lat(), lng: ev.latLng.lng() }))\r\n    }\r\n    return;\r\n  }\r\n\r\n    return (\r\n      <GoogleMap\r\n        defaultZoom={3.5}\r\n        defaultCenter={{lat: 63, lng: 90,}}\r\n        onClick={creation}\r\n      >\r\n        <Polyline\r\n          path={coords}\r\n          key={1}\r\n          options={{\r\n            strokeColor: \"#FF0000\",\r\n            strokeOpacity: 0.8,\r\n            strokeWeight: 2,\r\n            fillColor: \"#ff0000\",\r\n            fillOpacity: 0.35\r\n          }}\r\n        />\r\n        {\r\n          isVisibility &&\r\n          routes && \r\n          routes.map(\r\n            cord => <ProfilePolylineAndMarker сoordinates={cord.coordinates} date={cord} key={cord.id}/>\r\n          )\r\n        }\r\n      </GoogleMap>\r\n    );\r\n}\r\n\r\n\r\nexport default withScriptjs(withGoogleMap(MyMap));\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {Col, Row, Card} from 'react-bootstrap';\r\n\r\n\r\nfunction BlogList() {\r\n    const blog = useSelector(state => state.blog.posts);\r\n\r\n    return(\r\n        <Row className = \"d-flex\">\r\n            {\r\n                blog &&\r\n                blog.map( ({heading, id, text, publishingDate}) =>\r\n                <Col md = {4} key = {id} className = {\"mt-3\"}>\r\n                    <Card style = {{width: 430}} border = {\"ligth\"}>\r\n                        <h4 className = \"blog__title\">{heading}</h4>\r\n                        <p className = \"blog__subtitle\">\r\n                            {text}\r\n                        </p>\r\n                        <p className = \"blog__date\">\r\n                            {publishingDate}\r\n                        </p>\r\n                    </Card>\r\n                </Col>\r\n            )}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default BlogList;","export function determiningComplexity(complexity) {\r\n    if (complexity === \"Medium\"){\r\n        return \"#ffa500\";\r\n    }\r\n    else if(complexity === \"Difficult\"){\r\n        return \"#ff0000\";\r\n    }\r\n    return \"#008000\";\r\n}\r\n\r\nexport function difficultyTranslation(complexity) {\r\n    if (complexity === \"Medium\"){\r\n        return \"средняя\";\r\n    }\r\n    else if(complexity === \"Difficult\"){\r\n        return \"сложная\";\r\n    }\r\n    return \"легкая\";\r\n}","export const GET_ROUTES = 'GET_ROUTES';\r\nexport const SAVE_ROUTES = 'SAVE_ROUTES';\r\nexport const ADD_ROUTE = 'ADD_ROUTE';\r\n\r\nexport const getRoute = (id) => ({type: GET_ROUTES, payload: id});\r\nexport const receiveRoute = (router) => ({type:SAVE_ROUTES, payload: router});\r\nexport const addRoute = (id) => ({type: ADD_ROUTE, payload: id});\r\n\r\n","import React from 'react';\r\nimport {Polyline, Marker, InfoWindow} from \"react-google-maps\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport {difficultyTranslation, determiningComplexity} from '../utils/helpFuncion';\r\nimport {addRoute} from '../action/route'\r\n\r\nfunction PolylineAndMarker({сoordinates, date}) {\r\n    const [selectedRoute, setSelectedRoute] = React.useState(null);\r\n    const user = useSelector(state => state.user);\r\n    const isAdmin = useSelector(state => state.user.isAdmin);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    return(\r\n        <>\r\n            <Polyline\r\n            path={сoordinates}\r\n            key={1}\r\n            options={{\r\n                strokeColor: determiningComplexity(date.complexity),\r\n                strokeOpacity: 0.8,\r\n                strokeWeight: 2,\r\n                fillColor: \"#FF0000\",\r\n                fillOpacity: 0.35\r\n            }}\r\n            />\r\n            <Marker \r\n                position={сoordinates[0]}\r\n                onClick={() => setSelectedRoute(date)}\r\n                icon={{\r\n                    url: '/marker.png',\r\n                    scaledSize: new window.google.maps.Size(30, 30)\r\n                }}\r\n\r\n            />\r\n            {\r\n                selectedRoute &&\r\n                <InfoWindow\r\n                    position={сoordinates[0]}\r\n                    onCloseClick={() => setSelectedRoute(null)}\r\n                >\r\n                    <div className=\"info-window\">\r\n                        <h2 className=\"info-window__title\">{date.name}</h2>\r\n                        <p className=\"info-window__text\">{date.description}</p>\r\n                        <p className=\"info-window__complexity\">Сложность: {difficultyTranslation(date.complexity)}</p>\r\n                        <button className=\"info-window__button\" onClick={() => history.push({\r\n                            pathname: `/Routes/${date.id}`,\r\n                            })}\r\n                        >\r\n                            Подробнее\r\n                        </button>\r\n                        {\r\n                            user.userName &&\r\n                            !date.userHas &&\r\n                            <button className=\"info-window__button\" onClick={() => dispatch(addRoute(date.id))}\r\n                            >\r\n                                Добавить\r\n                            </button>\r\n                        }\r\n                        {\r\n                            isAdmin &&\r\n                            <button className=\"info-window__button\" onClick={() => console.log()}\r\n                            >\r\n                                Удалить\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </InfoWindow>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PolylineAndMarker;","import React from 'react';\r\nimport {\r\n    withScriptjs, withGoogleMap,\r\n    GoogleMap, Marker,\r\n    Polyline\r\n} from \"react-google-maps\";\r\n\r\nimport {determiningComplexity} from '../utils/helpFuncion';\r\n\r\nfunction DetailsMap({routes}) {\r\n\r\n    return (\r\n        <GoogleMap\r\n            defaultZoom={12}\r\n            defaultCenter={routes.coordinates[0]}\r\n        >\r\n            <Polyline\r\n            path={routes.coordinates}\r\n            key={1}\r\n            options={{\r\n                strokeColor: determiningComplexity(routes.complexity),\r\n                strokeOpacity: 0.8,\r\n                strokeWeight: 2,\r\n                fillColor: \"#FF0000\",\r\n                fillOpacity: 0.35\r\n            }}\r\n            />\r\n            <Marker\r\n                position={routes.coordinates[0]}\r\n                icon={{\r\n                    url: '/marker.png',\r\n                    scaledSize: new window.google.maps.Size(30, 30)\r\n                }}\r\n            />\r\n        </GoogleMap>\r\n    )  \r\n}\r\n\r\n\r\nexport default withScriptjs(withGoogleMap(DetailsMap));\r\n","import React from 'react';\r\nimport {Polyline, Marker, InfoWindow} from \"react-google-maps\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport {difficultyTranslation, determiningComplexity} from '../utils/helpFuncion';\r\nimport {deleteMyRoute, publishMyRoute, completeRoute} from '../action/user';\r\n\r\nfunction ProfilePolylineAndMarker({сoordinates, date}) {\r\n    const [selectedRoute, setSelectedRoute] = React.useState(null);\r\n    const userName = useSelector(state => state.user.userName);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    return(\r\n        <>\r\n            <Polyline\r\n            path={сoordinates}\r\n            key={1}\r\n            options={{\r\n                strokeColor: determiningComplexity(date.complexity),\r\n                strokeOpacity: 0.8,\r\n                strokeWeight: 2,\r\n                fillColor: \"#FF0000\",\r\n                fillOpacity: 0.35\r\n            }}\r\n            />\r\n            <Marker \r\n                position={сoordinates[0]}\r\n                onClick={() => setSelectedRoute(date)}\r\n                icon={{\r\n                    url: '/marker.png',\r\n                    scaledSize: new window.google.maps.Size(30, 30)\r\n                }}\r\n\r\n            />\r\n            {\r\n                selectedRoute &&\r\n                <InfoWindow\r\n                    position={сoordinates[0]}\r\n                    onCloseClick={() => setSelectedRoute(null)}\r\n                >\r\n                    <div className=\"info-window\">\r\n                        <h2 className=\"info-window__title\">{date.name}</h2>\r\n                        <p className=\"info-window__text\">{date.description}</p>\r\n                        <p className=\"info-window__complexity\">Сложность: {difficultyTranslation(date.complexity)}</p>\r\n                        <button className=\"info-window__button\" onClick={() => history.push({\r\n                            pathname: `/Routes/${date.id}`,\r\n                            })}\r\n                        >\r\n                            Подробнее\r\n                        </button>\r\n                        {\r\n                            !date.isPublished &&\r\n                            <button className=\"info-window__button\" onClick={() => dispatch(publishMyRoute(date.id))}\r\n                            >\r\n                                Опубликовать\r\n                            </button>\r\n                        }\r\n                            <button className=\"info-window__button\" onClick={() => dispatch(deleteMyRoute(date.id))}\r\n                            >\r\n                                Удалить\r\n                            </button>\r\n\r\n                        {\r\n                            date.isPassed &&\r\n                            <button className=\"info-window__button\" onClick={() => history.push({\r\n                                pathname: `/Profile/Report`,\r\n                                customData: date.id,\r\n                            })}\r\n                            >\r\n                                Создать отчет\r\n                            </button>\r\n                        }\r\n                        {\r\n                            !date.isPassed &&\r\n                            <button className=\"info-window__button\" onClick={() => dispatch(completeRoute(date.id))}\r\n                            >\r\n                                Пройти\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </InfoWindow>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfilePolylineAndMarker;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nfunction ListComments() {\r\n    const blog = useSelector(state => state.blog.posts);\r\n\r\n    return(\r\n        <div>\r\n            <Avatar>N</Avatar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListComments;","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {SecondHeader} from '../components';\r\nimport {login} from '../action/user'\r\n\r\nfunction AuthorizationPage() {\r\n    const dispatch = useDispatch();\r\n    const userName = useSelector(state => state.user.userName);\r\n    const history = useHistory();\r\n    const validationsSchema = yup.object().shape({\r\n        email: yup.string()\r\n        .required('Обязательное поле'),\r\n\r\n        password: yup.string()\r\n        .required('Обязательное поле'),\r\n    });\r\n\r\n    return(\r\n        <div className = \"authorization\">\r\n            <SecondHeader />\r\n            <div className = \"authorization__body\">\r\n                <h4 className = \"authorization__title\">Вход</h4>\r\n                <Formik\r\n                    initialValues = {\r\n                        {\r\n                            email: '',\r\n                            password: '',\r\n                        }\r\n                    }\r\n                    validateOnBlur\r\n                    validationSchema = {validationsSchema}\r\n                    onSubmit = {(values) => {dispatch(login(values), userName && history.push('/'))}}\r\n                >\r\n                {({values, errors, touched, handleChange, handlBlur, handleSubmit}) => (\r\n                    <>\r\n                        <input \r\n                            className = \"authorization__input\"\r\n                            onChange = {handleChange}\r\n                            onBlur = {handlBlur}\r\n                            value = {values.name}\r\n                            name = \"email\"\r\n                            type = \"text\"\r\n                            size = \"40\"\r\n                            placeholder = \"Ваш email\">\r\n                        </input>\r\n                        {\r\n                            touched.email && errors.email && <p className=\"authorization__error\">{errors.email}</p>\r\n                        }\r\n                        <input \r\n                            className = \"authorization__input\" \r\n                            onChange = {handleChange} \r\n                            onBlur = {handlBlur} \r\n                            value = {values.name}\r\n                            name = \"password\"\r\n                            type = \"password\" \r\n                            size = \"40\" \r\n                            placeholder = \"Ваш пароль\">\r\n                        </input>\r\n                        {\r\n                            touched.password && errors.password && <p className=\"authorization__error\">{errors.password}</p>\r\n                        }\r\n                        <button className = \"authorization__btn\" onClick = {handleSubmit} type = \"submit\">Авторизоваться</button>\r\n                    </>\r\n                )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorizationPage;","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useDispatch} from 'react-redux';\r\n\r\n\r\nimport {registration} from '../action/user';\r\nimport {SecondHeader} from '../components';\r\n\r\nfunction RegistrationPage() {\r\n    const dispatch = useDispatch();\r\n    const validationsSchema = yup.object().shape({\r\n\r\n        userName: yup.string()\r\n        .required('Обязательное поле')\r\n        .matches(/^[^\\s][0-9a-zA-Zа-яА-я!@#$%^&*]{5,}$/,'Логин должен содержать более 4 символов и не содержать пробелов'),\r\n\r\n        email: yup.string()\r\n        .email('Неверный email')\r\n        .required('Обязательное поле'),\r\n\r\n        password: yup.string()\r\n        .matches(/[^\\s](?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}/,\r\n            'Пароль должен содержать 6 символов, латинские буквы, одну заглавную букву, одну прописную букву, одну цифру и один спец. символ'\r\n          )\r\n        .required('Обязательное поле'),\r\n\r\n        confirmPassword: yup.string()\r\n        .oneOf([yup.ref('password')], 'Пароли не совпадают')\r\n        .required('Обязательное поле'),\r\n    });\r\n\r\n    return(\r\n        <div className = \"registration\">\r\n            <SecondHeader />\r\n            <div className = \"registration__body\">\r\n                <h4 className = \"registration__title\">Регистрация</h4>\r\n                <Formik\r\n                    initialValues = {\r\n                        {\r\n                            userName: '',\r\n                            email: '',\r\n                            password: '',\r\n                            confirmPassword: '',\r\n                        }\r\n                    }\r\n                    validateOnBlur\r\n                    validationSchema = {validationsSchema}\r\n                    onSubmit = {(values) => {dispatch(registration(values))}}\r\n                >\r\n                    {({values, errors, touched, handleChange, handlBlur, handleSubmit}) => (\r\n                        <>\r\n                            <input \r\n                                className = \"registration__input\" \r\n                                onChange = {handleChange} \r\n                                onBlur = {handlBlur} \r\n                                value = {values.name}\r\n                                name = \"userName\"\r\n                                type = \"text\" \r\n                                size = \"40\" \r\n                                placeholder = \"Придумайте логин\">\r\n                            </input>\r\n                            {\r\n                                touched.userName && errors.userName && <p className = \"registration__error\">{errors.userName}</p>\r\n                            }\r\n                            <input \r\n                                className = \"registration__input\" \r\n                                onChange = {handleChange} \r\n                                onBlur = {handlBlur} \r\n                                value = {values.name}\r\n                                name = \"email\"\r\n                                type = \"text\" \r\n                                size = \"40\" \r\n                                placeholder = \"Ваш Email\">\r\n                            </input>\r\n                            {\r\n                                touched.email && errors.email && <p className=\"registration__error\">{errors.email}</p>\r\n                            }\r\n                            <input \r\n                                className = \"registration__input\" \r\n                                onChange = {handleChange} \r\n                                onBlur = {handlBlur} \r\n                                value = {values.name}\r\n                                name = \"password\"\r\n                                type = \"password\" \r\n                                size = \"40\" \r\n                                placeholder = \"Придумайте пароль\">\r\n                            </input>\r\n                            {\r\n                                touched.password && errors.password && <p className=\"registration__error\">{errors.password}</p>\r\n                            }\r\n                            <input \r\n                                className = \"registration__input\" \r\n                                onChange = {handleChange} \r\n                                onBlur = {handlBlur} \r\n                                value = {values.name}\r\n                                name = \"confirmPassword\"\r\n                                type = \"password\" \r\n                                size = \"40\" \r\n                                placeholder = \"Повторите пароль\">\r\n                            </input>\r\n                            {\r\n                                touched.confirmPassword && errors.confirmPassword && <p className=\"registration__error\">{errors.confirmPassword}</p>\r\n                            }\r\n                            <button className = \"registration__btn\" onClick = {handleSubmit} type = \"submit\">Регистрация</button>\r\n                        </>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegistrationPage;","export const GET_BLOG = 'GET_BLOG';\r\nexport const SAVE_BLOG = 'SAVE_BLOG';\r\n\r\nexport const receiveBlog  = (blog) => ({type: SAVE_BLOG, payload: blog});\r\nexport const getBlog = (page) => ({type: GET_BLOG, payload: page});\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport {MainHeder, MainFooter, BlogList} from '../components';\r\nimport {getBlog} from '../action/blog';\r\n\r\nfunction BlogPage() {\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.blog.pageModel);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getBlog(1));\r\n    }, []);\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            primary: green,\r\n        },\r\n    });\r\n\r\n    return(\r\n        <>\r\n            <MainHeder/>\r\n            <div className = \"blog\">\r\n                <div className = \"blog__body\">\r\n                    <BlogList />\r\n                </div>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container justify=\"center\" spacing={2}>\r\n                            <Grid item>\r\n                                {\r\n                                    page.hasPreviousPage &&\r\n                                    <ThemeProvider theme={theme}>\r\n                                        <Button\r\n                                            onClick={() => {dispatch(getBlog(page.pageNumber - 1))}}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >\r\n                                            Предыдущая страниц\r\n                                        </Button>\r\n                                    </ThemeProvider>\r\n                                }\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <span style={{height: \"50px\", lineHeight: \"50px\"}}>{page.pageNumber} из {page.totalPages}</span>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {\r\n                                    page.hasNextPage &&\r\n                                    <ThemeProvider theme={theme}>\r\n                                        <Button\r\n                                            onClick={() => {dispatch(getBlog(page.pageNumber + 1))}}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >\r\n                                            Следующая страница\r\n                                        </Button>\r\n                                    </ThemeProvider>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <MainFooter/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogPage;","export const GET_ALL_ROUTES = 'GET_ALL_ROUTES';\r\nexport const SAVE_ALL_ROUTES = 'SAVE_ALL_ROUTES';\r\n\r\nexport const getAllRoutes = () => ({type: GET_ALL_ROUTES});\r\nexport const receiveAllRoute = (router) => ({type:SAVE_ALL_ROUTES, payload: router});\r\n","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport {MainHeder, MainFooter, SharedMap} from '../components';\r\nimport {getAllRoutes} from '../action/allRoutes'\r\n\r\n\r\nfunction RoutesPage() {\r\n    const routes = useSelector(state => state.allRoutes.routes);\r\n    const dispatch = useDispatch()\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getAllRoutes());\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            <MainHeder/>\r\n            <div className = \"routes\">\r\n                <div className = \"routes__body\">\r\n                    <h2 className = \"routes__title\">Карта маршрутов</h2>\r\n                    <div className=\"map\">\r\n                        <SharedMap \r\n                            routes={routes}\r\n                            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,place&key=AIzaSyCm18OXr7nUO_hsYpActf9Dwjc0_jmpK9g`}  \r\n                            loadingElement={<div style={{ height: `100%` }} />}\r\n                            containerElement={<div style={{ height: `700px` }} />}\r\n                            mapElement={<div style={{ height: `100%` }} />}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <MainFooter/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RoutesPage;","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport AccountCircleSharpIcon from '@material-ui/icons/AccountCircleSharp';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport {MainHeder, MainFooter, MyMap} from '../components';\r\nimport {removeCoordinat} from '../action/creatingRoutes';\r\nimport {GetUserRoute} from '../action/user';\r\n\r\n\r\nfunction ProfilePage() {\r\n    const user = useSelector(state => state.user);\r\n    const coords  = useSelector(state => state.creatingRoutes.coordinates);\r\n    const dispatch = useDispatch();\r\n    const [creation , setCreation ] = React.useState(false);\r\n    const [visibility , setVisibility ] = React.useState(true);\r\n    const isCreation = () => {\r\n        setCreation(!creation);\r\n    };\r\n    const isVisibility = () => {\r\n        setVisibility(!visibility);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        dispatch(GetUserRoute());\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <MainHeder/>\r\n            <div className = \"profile\">\r\n                <div className = \"profile__body\">\r\n                    <div className = \"user-info\">\r\n                        <AccountCircleSharpIcon className = \"user-info__icon\" style = {{ fontSize: 100 }}/>\r\n                        <p className = \"user-info__text\">Login: {user.userName}</p>\r\n                        <p className = \"user-info__text\">Email: {user.email}</p>\r\n                        <p className = \"user-info__text\">Кол-во моих маршрутов: {user.routesCount}</p>\r\n                        <p className = \"user-info__text\">Кол-во пройденых маршрутов: {user.passedRoutesCount}</p>\r\n                    </div>\r\n                    <div className = \"my-routes\">\r\n                        <h3 className = \"my-routes__title\">Мои маршруты</h3>\r\n                        <div className=\"my-map\">\r\n                            <MyMap \r\n                                isVisibility={visibility}\r\n                                isCreation={creation}\r\n                                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,place&key=AIzaSyCm18OXr7nUO_hsYpActf9Dwjc0_jmpK9g`}\r\n                                loadingElement={<div style={{ height: `100%` }} />}\r\n                                containerElement={<div style={{ height: `700px` }} />}\r\n                                mapElement={<div style={{ height: `100%` }} />}\r\n                            />\r\n                        </div>\r\n                        <div className=\"сontrol-buttons\">\r\n                            {\r\n                                coords.length > 1 && \r\n                                <button className=\"сontrol-buttons__button\" onClick={()=>{dispatch(removeCoordinat())}}>Удалить</button>\r\n                            }\r\n                            <button className=\"сontrol-buttons__button\" onClick={isCreation}>\r\n                                {\r\n                                    creation ? \"Прекратить создание маршрута\" : \"Создать маршрут\"\r\n                                }\r\n                            </button>\r\n                            <button className=\"сontrol-buttons__button\" onClick={isVisibility}>\r\n                                {\r\n                                    visibility ? \"Скрыть мои маршуты\" : \"Показать мои маршруты\"\r\n                                }\r\n                            </button>\r\n                            {\r\n                                coords.length > 1  && \r\n                                <NavLink to=\"/Profile/Routes\" className=\"сontrol-buttons__button\">Продолжить</NavLink>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <MainFooter/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react';\r\n\r\nimport {MainHeder, MainFooter, CarouselBox} from '../components';\r\n\r\nfunction MainPage() {\r\n    return(\r\n        <>\r\n            <MainHeder/>\r\n            <CarouselBox/>\r\n            <section className = \"service\">\r\n                <div className = \"service__body\">\r\n                    <b className = \"service__title\">О нас</b>\r\n                    <p className = \"service__subtitle\">LikesHikes - это сервис для любителей туризма и различных походов. Он позволяет вам создать свой собственный маршрут и делиться им с остальными. На сайте также присутствует блог с различной полезной информацией где вы можете узнать много нового и поделиться своими впечатлениями.</p>\r\n                    <b className = \"service__title\">Особенности</b>\r\n                    <p className = \"service__subtitle\">На нашем сайте вы можете делать отчёты для каждого своего пройденного маршрута, чтобы они всегда были у вас под рукой.</p>\r\n                </div>\r\n            </section>\r\n            <section className = \"section-comments\">\r\n            </section>\r\n            <MainFooter/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nfunction NotFound() {\r\n    return(\r\n        <div className = \"no-found\">\r\n            <div className = \"no-found__body\">\r\n                <p className = \"no-found__title\">404</p>\r\n                <p className = \"no-found__subtitle\">Страница не найдена</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;\r\n\r\n","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport {MainHeder, MainFooter, DetailsMap, ListComments} from '../components';\r\nimport {getRoute} from '../action/route';\r\nimport {difficultyTranslation} from '../utils/helpFuncion';\r\n\r\nfunction RouteDetailsPage(prop) {\r\n    const id = prop.location.pathname.split('/')[2];\r\n    const date = useSelector(state => state.routes);\r\n    const user = useSelector(state => state.user);\r\n    const [value, setValue] = React.useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getRoute(id))\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            <MainHeder/>\r\n                <div className = \"route-details\">\r\n                    <div className=\"route-details__body\">\r\n                        <DetailsMap\r\n                                routes={date}\r\n                                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,place&key=AIzaSyCm18OXr7nUO_hsYpActf9Dwjc0_jmpK9g`}  \r\n                                loadingElement={<div style={{ height: `100%` }} />}\r\n                                containerElement={<div style={{ height: `400px` }} />}\r\n                                mapElement={<div style={{ height: `100%` }} />}\r\n                        />\r\n                        {\r\n                            date.name &&\r\n                            <Grid container spacing={4}>\r\n                                <Grid item xs={12}>\r\n                                    <h2 className=\"route-details__title\">{date.name}</h2>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <span className=\"route-details__headers\">Продолжительность: </span>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={9}>\r\n                                    <span className=\"route-details__text\">{date.duration} ч.</span>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <span className=\"route-details__headers\">Сложность: </span>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={9}>\r\n                                    <span className=\"route-details__text\">{difficultyTranslation(date.complexity)}</span>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <span className=\"route-details__headers\">Описание: </span>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={9}>\r\n                                    <span className=\"route-details__text\">{date.description}</span>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <span className=\"route-details__headers\">Рейтинг: </span>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={9}>\r\n                                    <span className=\"route-details__text\">{date.rating}</span>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <span className=\"route-details__headers\">Регион: </span>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={9}    >\r\n                                    <span className=\"route-details__text\">{date.region}</span>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                    <span className=\"route-details__headers\">Длительность: </span>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={9}    >\r\n                                    <span className=\"route-details__text\">{Math.round(date.length)} км</span>\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                        {\r\n                            date.name &&\r\n                            // user.userName &&\r\n                            <div className=\"estimation\">\r\n                                <p className=\"estimation__text\">\r\n                                        Оцените маршрут\r\n                                </p>\r\n                                <Rating\r\n                                    name=\"simple-controlled\"\r\n                                    value={value}\r\n                                    precision={0.5}\r\n                                    size=\"large\"\r\n                                    onChange={(event, newValue) => {\r\n                                        setValue(newValue);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                        {\r\n                            date.name &&\r\n                            // user.userName &&\r\n                            <div className=\"comments\">\r\n                                <ListComments />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            <MainFooter/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RouteDetailsPage;","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport {MainHeder, MainFooter} from '../components';\r\nimport {createRoute} from '../action/creatingRoutes';\r\n\r\nfunction CreatingRoute() {\r\n    const validationsSchema = yup.object().shape({\r\n        routeName: yup.string()\r\n        .required('Обязательное поле')\r\n        .matches(/^[^\\s][0-9a-zA-Zа-яА-я!@#$%^&*]{3,}$/,'Название должен содержать более 3 символов и не содержать пробелов'),\r\n\r\n        description: yup.string()\r\n        .required('Обязательное поле'),\r\n\r\n        region: yup.string()\r\n        .required('Обязательное поле'),\r\n\r\n        duration: yup.string()\r\n        .required('Обязательное поле')\r\n        .matches(/[0-9]$/,'Продолжительность должна содержать число'),\r\n\r\n        complexity: yup.string()\r\n        .required('Выберите сложность маршрута'),\r\n    });\r\n    const coordinates = useSelector(state => state.creatingRoutes.coordinates);\r\n    const dispatch = useDispatch();\r\n\r\n    return(\r\n        <>\r\n            <MainHeder/>\r\n            <div className = \"creating-route\">\r\n                <div className=\"creating-route__body\">\r\n                    <Formik\r\n                        initialValues = {\r\n                            {\r\n                                coordinates: coordinates,\r\n                                routeName: '',\r\n                                description: '',\r\n                                complexity: '',\r\n                                region: '',\r\n                                keyPoints: '',\r\n                                duration: '',\r\n                                createdById: null,\r\n                            }\r\n                        }\r\n                        validateOnBlur\r\n                        validationSchema = {validationsSchema}\r\n                        onSubmit = {(values) => dispatch(createRoute(values))}\r\n                    >\r\n                        {({values, errors, touched, handleChange, handlBlur, handleSubmit}) => (\r\n                            <>\r\n                                <h3 className=\"creating-route__title\">Название маршрута</h3>\r\n                                <input \r\n                                    className = \"creating-route__input\" \r\n                                    onChange = {handleChange} \r\n                                    onBlur = {handlBlur} \r\n                                    value = {values.name}\r\n                                    name = \"routeName\"\r\n                                    type = \"text\" \r\n                                    placeholder = \"Медведь-Камень\"\r\n                                >\r\n                                </input>\r\n                                {\r\n                                    touched.routeName && errors.routeName && <p className = \"creating-route__error\">{errors.routeName}</p>\r\n                                }\r\n                                <h3 className=\"creating-route__title\">Описание</h3>\r\n                                <textarea \r\n                                    style={{height: \"250px\", width: \"90%\", resize: \"none\"}}\r\n                                    className = \"creating-route__input\" \r\n                                    onChange = {handleChange} \r\n                                    onBlur = {handlBlur} \r\n                                    value = {values.name}\r\n                                    name = \"description\"\r\n                                    placeholder = \"Гора Медведь-Камень пользуется большой популярностью...\"\r\n                                >\r\n                                </textarea>\r\n                                {\r\n                                    touched.description && errors.description && <p className=\"creating-route__error\">{errors.description}</p>\r\n                                }\r\n                                <div className=\"creating-route__row\">\r\n                                    <div className=\"creating-route__col\">\r\n                                        <h3 className=\"creating-route__title\">Сложность</h3>\r\n                                        <select \r\n                                            className = \"creating-route__input\" \r\n                                            onChange = {handleChange} \r\n                                            onBlur = {handlBlur} \r\n                                            value = {values.name}\r\n                                            name = \"complexity\"\r\n                                        >\r\n                                            <option disabled selected=\"selected\">Выберите сложность</option> \r\n                                            <option>Легкий</option>\r\n                                            <option>Средний</option>\r\n                                            <option>Сложный</option>\r\n                                        </select>\r\n                                        {\r\n                                            touched.complexity && errors.complexity && <p className=\"creating-route__error\" >{errors.complexity}</p>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"creating-route__col\" style={{ marginLeft: \"25px\"}}>\r\n                                        <h3 className=\"creating-route__title\">Регион</h3>\r\n                                        <input \r\n                                            className = \"creating-route__input\" \r\n                                            onChange = {handleChange} \r\n                                            onBlur = {handlBlur} \r\n                                            value = {values.name}\r\n                                            name = \"region\"\r\n                                            type = \"text\" \r\n                                            placeholder = \"Кострома\"\r\n                                        >\r\n                                        </input>\r\n                                        {\r\n                                            touched.region && errors.region && <p className=\"creating-route__error\" >{errors.region}</p>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"creating-route__row\">\r\n                                    <div className=\"creating-route__col\">\r\n                                        <h3 className=\"creating-route__title\">Продолжительность(в часах)</h3>\r\n                                        <input \r\n                                            className = \"creating-route__input\" \r\n                                            onChange = {handleChange} \r\n                                            onBlur = {handlBlur} \r\n                                            value = {values.name}\r\n                                            name = \"duration\"\r\n                                            type = \"text\" \r\n                                            placeholder = \"25\">\r\n                                        </input>\r\n                                        {\r\n                                            touched.duration && errors.duration && <p className=\"creating-route__error\">{errors.duration}</p>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"creating-route__col\" style={{ marginLeft: \"25px\"}}>\r\n                                        <h3 className=\"creating-route__title\">Ключевые слова</h3>\r\n                                        <input \r\n                                            style={{width: \"500px\"}}\r\n                                            className = \"creating-route__input\" \r\n                                            onChange = {handleChange} \r\n                                            onBlur = {handlBlur} \r\n                                            value = {values.name}\r\n                                            name = \"keyPoints\"\r\n                                            type = \"text\" \r\n                                            placeholder = \"Кострома, волга...\">\r\n                                        </input>\r\n                                        {\r\n                                            touched.keyPoints && errors.keyPoints && <p className=\"creating-route__error\">{errors.keyPoints}</p>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <button className = \"creating-route__btn\" onClick = {handleSubmit} type = \"submit\">Создать</button>\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n            <MainFooter/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatingRoute;","import React from 'react';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {MainHeder, MainFooter} from '../components';\r\n\r\n\r\nfunction ReportPage(prop) {\r\n    const dispatch = useDispatch()\r\n    const id = prop.location.customData\r\n\r\n    return(\r\n        <>\r\n            <MainHeder/>\r\n            <div className=\"report\">\r\n                <div className=\"report__body\">\r\n\r\n                </div>\r\n            </div>\r\n            <MainFooter/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportPage;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RegistrationPage, AuthorizationPage,\n    BlogPage, MainPage ,RoutesPage,\n    ProfilePage, NotFoundPage,\n    RouteDetailsPage, CreatingRoute,\n    ReportPage,\n} from \"./pages\";\nimport { auth } from './action/user';\n\nfunction App() {\n    const dispatch = useDispatch();\n    const userName = useSelector(state => state.user.userName);\n    const coordinates = useSelector(state => state.creatingRoutes.coordinates);\n\n    React.useEffect(() => {\n        if(localStorage.getItem('token')){\n            dispatch(auth())\n        }\n    }, [])\n\n    return (\n        <Switch>\n            <Route exact path='/' component={MainPage} />\n            <Route path='/Blog' component={BlogPage} />\n\n            <Route exact path='/Routes' component={RoutesPage} />\n            {\n                userName &&\n                <Route exact path='/Profile' component={ProfilePage} />\n            }\n            {\n                userName &&\n                <Route path='/Profile/Report' component={ReportPage} />\n            }\n            <Route path='/Registration' component={RegistrationPage} />\n            <Route path='/Authorization' component={AuthorizationPage} />\n            <Route path=\"/Routes/:id\" component={RouteDetailsPage} />\n            {\n                coordinates.length > 1 &&\n                <Route path=\"/Profile/Routes\" component={CreatingRoute} />\n            }\n            <Route component={NotFoundPage} />\n        </Switch>\n    );\n}\n\nexport default App;\n","import { SET_USER, LOGOUT, SAVE_USER_DATA} from \"../action/user\";\r\n\r\nconst defaultState = {\r\n    userName: null,\r\n    email: null,\r\n    routesCount: null,\r\n    passedRoutesCount: null,\r\n    isAdmin: null,\r\n    userRoutes: [],\r\n};\r\n\r\nexport default function  user (state = defaultState, action) {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return{\r\n                ...state,\r\n                userName: action.payload.userName,\r\n                email: action.payload.email,\r\n                isAdmin: action.payload.isAdmin,\r\n                routesCount: action.payload.routesCount,\r\n                passedRoutesCount: action.payload.passedRoutesCount,\r\n            }\r\n        case SAVE_USER_DATA:\r\n            return{\r\n                ...state,\r\n                userRoutes: action.payload,\r\n            }\r\n        case LOGOUT:\r\n            localStorage.removeItem('token')\r\n            return{\r\n                ...state,\r\n                userName: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {SAVE_BLOG} from \"../action/blog\";\r\n\r\nconst defaultState = {\r\n    posts:[],\r\n    pageModel:{\r\n        pageNumber: 1,\r\n        totalPages: 0,\r\n        hasPreviousPage: false,\r\n        hasNextPage: false,\r\n    }\r\n};\r\n\r\nexport default function  blog (state = defaultState, action) {\r\n    switch (action.type) {\r\n        case SAVE_BLOG:\r\n            return{\r\n                ...state,\r\n                pageModel: action.payload.pageModel,\r\n                posts: action.payload.posts,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_COORDINAT, REMOVE_COORDINAT, CLEAR_ROUTE} from \"../action/creatingRoutes\";\r\n\r\nconst defaultState = {\r\n    coordinates: [],\r\n};\r\n\r\nexport default function  creatingRoutes (state = defaultState, action) {\r\n    switch (action.type) {\r\n        case REMOVE_COORDINAT:\r\n            return{\r\n                ...state,\r\n                coordinates: []\r\n            }\r\n        case SET_COORDINAT:\r\n            return{\r\n                ...state,\r\n                coordinates: [...state.coordinates, action.payload],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SAVE_ALL_ROUTES } from \"../action/allRoutes\";\r\n\r\nconst defaultState = {\r\n    routes: [\r\n        {\r\n            id: null,\r\n            name: null,\r\n            coordinates:[],\r\n            duration: null,\r\n            complexity: null,\r\n            description: null,\r\n            length: null,\r\n            region: null,\r\n            keyPoints: null,\r\n            rating: null,\r\n            userHas: null,\r\n        },\r\n    ],\r\n};\r\n\r\nexport default function  routers (state = defaultState, action) {\r\n    switch (action.type) {\r\n        case SAVE_ALL_ROUTES:\r\n            return{\r\n                ...state,\r\n                routes: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SAVE_ROUTES } from \"../action/route\";\r\n\r\nconst defaultState = {\r\n    id: null,\r\n    name: null,\r\n    coordinates:[],\r\n    length: null,\r\n    complexity: null,\r\n    description: null,\r\n    region: null,\r\n    keyPoints: null,\r\n    rating: null,\r\n    duration: null,\r\n    routeReviewModels: [],\r\n};\r\n\r\nexport default function  routers (state = defaultState, action) {\r\n    switch (action.type) {\r\n        case SAVE_ROUTES:\r\n            return{\r\n                ...state,\r\n                id: action.payload.id,\r\n                complexity: action.payload.complexity,\r\n                coordinates: action.payload.coordinates,\r\n                description: action.payload.description,\r\n                keyPoints: action.payload.keyPoints,\r\n                length: action.payload.length,\r\n                duration: action.payload.duration,\r\n                name: action.payload.name,\r\n                rating: action.payload.rating,\r\n                region: action.payload.region,\r\n                routeReviewModels: action.payload.routeReviewModels,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\n\r\nimport user from './user';\r\nimport blog from './blog';\r\nimport creatingRoutes from './creatingRoutes';\r\nimport allRoutes from './allRoutes';\r\nimport routes from './routes';\r\n\r\nexport default combineReducers({\r\n    user: user,\r\n    blog: blog,\r\n    creatingRoutes: creatingRoutes,\r\n    allRoutes: allRoutes,\r\n    routes: routes,\r\n});","import {put, takeEvery, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nimport {\r\n    REGISTRATION, LOGIN, setUser,\r\n    AUTH, logout, GET_USER_ROUTES,\r\n    SaveUserData, DELETE_MY_ROUTE,\r\n    PUBLISH_MY_ROUTE, COMPLETE_ROUTE,\r\n} from \"../action/user\";\r\nimport {removeCoordinat, CREATE_ROUTE} from \"../action/creatingRoutes\";\r\n\r\n\r\nfunction requestCompleteRoute(payload) {\r\n    return axios.put(`/api/PersonalArea/ChangeRoutePassed`, {RouteId: payload},\r\n        {headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});\r\n};\r\n\r\nfunction* workerCompleteRoute({payload}) {\r\n    try{\r\n        yield call(requestCompleteRoute, payload);\r\n        const response = yield call(requestUserData);\r\n        yield put(SaveUserData(response.data));\r\n        const data = yield call(requestAuth);\r\n        yield put(setUser(data.data));\r\n        swal(\"Маршрут пройден\", {\r\n            icon: \"success\",\r\n            timer: 3000,\r\n        });\r\n    }\r\n    catch (err) {\r\n        swal( err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\nfunction requestPublishMyRoute(payload) {\r\n    return axios.put(`/api/PersonalArea/PublishRoute`, {RouteId: payload},\r\n        {headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});\r\n};\r\n\r\nfunction* workerPublishMyRoute({payload}) {\r\n    try{\r\n        yield call(requestPublishMyRoute, payload);\r\n        const response = yield call(requestUserData);\r\n        yield put(SaveUserData(response.data));\r\n        swal(\"Маршрут опубликован\", {\r\n            icon: \"success\",\r\n            timer: 3000,\r\n        });\r\n    }\r\n    catch (err) {\r\n        swal( err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\nfunction requestCreateRoutes(payload) {\r\n    return axios.post(`/api/PersonalArea/CreateRoute`, payload,\r\n        {headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});\r\n};\r\n\r\nfunction* workerCreateRoutes({payload}) {\r\n    try{\r\n        yield call(requestCreateRoutes, payload);\r\n        const data = yield call(requestAuth);\r\n        yield put(setUser(data.data));\r\n        yield put(removeCoordinat());\r\n        swal(\"Маршрут создан\", {\r\n            icon: \"success\",\r\n            timer: 3000,\r\n        });\r\n    }\r\n    catch (err) {\r\n        swal( err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\nfunction requestDeleteMyRoute(payload) {\r\n    return axios.delete(`/api/PersonalArea/RemoveRoute?RouteId=${payload}`,\r\n        {headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});\r\n}\r\n\r\nfunction* workerDeleteMyRoute({payload}) {\r\n    try{\r\n        const response = yield call(requestDeleteMyRoute, payload);\r\n        if(response.data.errors){\r\n            swal( response.data.errors, {\r\n                icon: \"error\",\r\n                title: \"Уупс...\",\r\n                timer: 5000,\r\n            });\r\n        }\r\n        else{\r\n            swal(\"Вы успешно удалили маршрут\", {\r\n                icon: \"success\",\r\n                timer: 3000,\r\n            });\r\n            const response = yield call(requestUserData);\r\n            yield put(SaveUserData(response.data));\r\n            const data = yield call(requestAuth);\r\n            yield put(setUser(data.data));\r\n        }\r\n    }\r\n    catch (err) {\r\n        swal( err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\nfunction requestRegistration(payload) {\r\n    return axios.post(`/api/Account/registration`, payload);\r\n}\r\n\r\nfunction* workerRegistration({payload}) {\r\n    try{\r\n        const response = yield call(requestRegistration, payload);\r\n        if(!response.data.errors){\r\n            swal(\"Вы успешно зарегистрировались\", {\r\n                icon: \"success\",\r\n                timer: 3000,\r\n            });\r\n        }\r\n        else{\r\n            swal( response.data.errors, {\r\n                icon: \"error\",\r\n                title: \"Уупс...\",\r\n                timer: 5000,\r\n            });\r\n        }\r\n    }\r\n    catch (err) {\r\n        swal( err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\nfunction requestUserData() {\r\n    return axios.get(`/api/PersonalArea/GetUserRoutes`,\r\n        {headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});\r\n}\r\n\r\nfunction* workerUserData() {\r\n    try{\r\n        const response = yield call(requestUserData);\r\n        yield put(SaveUserData(response.data));\r\n    }\r\n    catch (err) {\r\n        swal( err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\nfunction requestLogin(payload) {\r\n\r\n    return axios.post('/api/Account/login', payload);\r\n}\r\n\r\nfunction* workerLogin({payload}) {\r\n    try{\r\n        const response = yield call(requestLogin, payload);\r\n        if(response.data.errors){\r\n            swal( response.data.errors, {\r\n                icon: \"error\",\r\n                title: \"Уупс...\",\r\n                timer: 5000,\r\n            });\r\n        }\r\n        else{\r\n            yield put(setUser(response.data));\r\n            localStorage.setItem('token', response.data.token);\r\n        }\r\n    }\r\n    catch (err) {\r\n        swal( err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\nfunction requestAuth() {\r\n    return  axios.get(`/api/Account/GetUserData`,\r\n        {headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});\r\n}\r\n\r\nfunction* workerAuth() {\r\n    try{\r\n        const response = yield call(requestAuth);\r\n\r\n        if(!response.data.errors){\r\n            yield put(setUser(response.data));\r\n        }\r\n        else{\r\n            yield put(logout());\r\n            localStorage.removeItem('token');\r\n            swal( response.data.errors, {\r\n                icon: \"error\",\r\n                title: \"Уупс...\",\r\n                timer: 5000,\r\n            });\r\n        }\r\n    }\r\n    catch (err) {\r\n        swal(err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* watchUser() {\r\n\r\n    yield takeEvery (REGISTRATION, workerRegistration);\r\n    yield takeEvery (LOGIN, workerLogin);\r\n    yield takeEvery (AUTH, workerAuth);\r\n    yield takeEvery (GET_USER_ROUTES, workerUserData);\r\n    yield takeEvery (DELETE_MY_ROUTE, workerDeleteMyRoute);\r\n    yield takeEvery (CREATE_ROUTE, workerCreateRoutes);\r\n    yield takeEvery (PUBLISH_MY_ROUTE, workerPublishMyRoute);\r\n    yield takeEvery (COMPLETE_ROUTE, workerCompleteRoute);\r\n}\r\n","import {put, takeEvery, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nimport {GET_BLOG, receiveBlog} from \"../action/blog\";\r\n\r\nfunction requestBlog(payload) {\r\n    return axios.get(`api/Blog/Posts?page=${payload}`);\r\n};\r\n\r\nfunction* workerBlog({payload}) {\r\n    try{\r\n        const response = yield call(requestBlog, payload);\r\n        yield put(receiveBlog(response.data));\r\n    }\r\n    catch (err) {\r\n        swal( err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\nexport function* watchBlog() {\r\n    yield takeEvery (GET_BLOG, workerBlog);\r\n}\r\n","import {put, takeEvery, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nimport {GET_ALL_ROUTES, receiveAllRoute} from \"../action/allRoutes\";\r\nimport {\r\n    GET_ROUTES, receiveRoute,\r\n    ADD_ROUTE,\r\n} from \"../action/route\";\r\n\r\n\r\nfunction requestAddRoute(payload) {\r\n    return axios.post(`/api/Routes/AddRouteToUser`, {RouteId: payload},\r\n        {headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});\r\n};\r\n\r\nfunction* workerAddRoute({payload}) {\r\n    try{\r\n        yield call(requestAddRoute, payload);\r\n        const response = yield call(requestAllRoute);\r\n        yield put(receiveAllRoute(response.data));\r\n        swal(\"Маршрут добавлен\", {\r\n            icon: \"success\",\r\n            timer: 3000,\r\n        });\r\n    }\r\n    catch (err) {\r\n        swal( err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\nfunction requestAllRoute() {\r\n    return  axios.get('/api/Routes/GetAllRoutes',\r\n        {headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});\r\n};\r\n\r\nfunction* workerAllRoute() {\r\n    try{\r\n        const response = yield call(requestAllRoute);\r\n        yield put(receiveAllRoute(response.data));\r\n    }\r\n    catch (err) {\r\n        swal( err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\nfunction requestRoute(payload) {\r\n    return axios.get(`/api/Routes/GetRouteById?id=${payload}`,\r\n        {headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});\r\n};\r\n\r\nfunction* workerRoute({payload}) {\r\n    try{\r\n        const response = yield call(requestRoute, payload);\r\n        if(!response.data.errors){\r\n            yield put(receiveRoute(response.data));\r\n        }\r\n        else{\r\n            swal( response.data.errors, {\r\n                icon: \"error\",\r\n                title: \"Уупс...\",\r\n                timer: 5000,\r\n            });\r\n        }\r\n    }\r\n    catch (err) {\r\n        swal( err.toString(), {\r\n            icon: \"error\",\r\n            title: \"Уупс...\",\r\n            timer: 5000,\r\n        });\r\n    }\r\n}\r\n\r\nexport function* watchRoute() {\r\n    yield takeEvery (GET_ALL_ROUTES, workerAllRoute);\r\n    yield takeEvery (GET_ROUTES, workerRoute);\r\n    yield takeEvery (ADD_ROUTE, workerAddRoute);\r\n}\r\n","import {all} from 'redux-saga/effects';\r\n\r\nimport {watchUser} from './sageUser';\r\nimport {watchBlog} from './sageBlog';\r\nimport {watchRoute} from './sageRoutes'\r\n\r\nexport function* rootWatcher() {\r\n    yield all([\r\n        watchUser(),\r\n        watchBlog(), \r\n        watchRoute()\r\n    ]);\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport {createLogger} from \"redux-logger\";\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from \"./reducers\";\r\nimport {rootWatcher} from './sagas'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst logger = createLogger({\r\n  diff: true,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware, logger));\r\n\r\nsagaMiddleware.run(rootWatcher);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nimport './scss/app.scss';\n\nimport App from './App.js';\nimport {store} from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}